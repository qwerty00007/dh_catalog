image:
  repository: uldiseihenbergs/meshcentral
  pullPolicy: IfNotPresent
  tag: 1.0.1@sha256:c630bace032988cdab8b660ed120be7a32539afcab2045f9b0d384cf094a692f

securityContext:
  readOnlyRootFilesystem: false
  runAsNonRoot: false

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

service:
  main:
    ports:
      main:
        protocol: "HTTPS"
        port: 10205

initContainers:
  init:
    image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    volumeMounts:
      - name: data
        mountPath: "/home/node/meshcentral/meshcentral-data"
    env:
      - name: svcPort
        value: "{{ .Values.service.main.ports.main.port }}"
      - name: "mongodbURL"
        valueFrom:
          secretKeyRef:
            name: mongodbcreds
            key: url
    command: ["/bin/sh", "-c"]
    args:
      - >
        export configfile='/home/node/meshcentral/meshcentral-data/config.json';
        if [ -f $configfile ]; then
          echo 'Config File exists, skipping...';
        else
          echo 'Creating basic config to $configfile...';
          echo '{' >> $configfile;
          echo '  "$schema": "http://info.meshcentral.com/downloads/meshcentral-config-schema.json",' >> $configfile
          echo '  "settings": {' >> $configfile;
          echo '    "port": '$svcPort',' >> $configfile;
          echo '    "mongoDb": "'$mongodbURL'"' >> $configfile;
          echo '  }' >> $configfile;
          echo '}' >> $configfile;
        fi;

mongodb:
  enabled: true
  mongodbUsername: meshcentral
  mongodbDatabase: meshcentral
  existingSecret: "mongodbcreds"

persistence:
  data:
    enabled: true
    mountPath: "/home/node/meshcentral/meshcentral-data"
  files:
    enabled: true
    mountPath: "/home/node/meshcentral/meshcentral-files"
