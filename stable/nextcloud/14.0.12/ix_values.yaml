image:
  repository: dh.tccr.io/truecharts/nextcloud
  pullPolicy: IfNotPresent
  tag: v24.0.2@sha256:d95cd7df4fedd7aa4607ccd74353bbab1c266cdac94fb5fdca40e4508061bc86

securityContext:
  readOnlyRootFilesystem: false
  runAsNonRoot: false

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0
  fsGroup: 33

service:
  main:
    ports:
      main:
        port: 10020
        targetPort: 80
  hpb:
    enabled: true
    ports:
      hpb:
        enabled: true
        port: 7867
        targetPort: 7867
secretEnv:
  NEXTCLOUD_ADMIN_USER: "admin"
  NEXTCLOUD_ADMIN_PASSWORD: "adminpass"

env:
  TRUSTED_PROXIES: "172.16.0.0/16"
  POSTGRES_DB: "{{ .Values.postgresql.postgresqlDatabase }}"
  POSTGRES_USER: "{{ .Values.postgresql.postgresqlUsername }}"
  POSTGRES_PASSWORD:
    secretKeyRef:
      name: dbcreds
      key: postgresql-password
  POSTGRES_HOST:
    secretKeyRef:
      name: dbcreds
      key: plainporthost
  REDIS_HOST:
    secretKeyRef:
      name: rediscreds
      key: plainhost
  REDIS_HOST_PASSWORD:
    secretKeyRef:
      name: rediscreds
      key: redis-password

envFrom:
  - configMapRef:
      name: nextcloudconfig

persistence:
  data:
    enabled: true
    mountPath: "/var/www/html"

probes:
  liveness:
    custom: true
    spec:
      httpGet:
        path: /status.php
        port: 80
        httpHeaders:
        - name: Host
          value: "test.fakedomain.dns"

  readiness:
    custom: true
    spec:
      httpGet:
        path: /status.php
        port: 80
        httpHeaders:
        - name: Host
          value: "test.fakedomain.dns"

  startup:
    custom: true
    spec:
      httpGet:
        path: /status.php
        port: 80
        httpHeaders:
        - name: Host
          value: "test.fakedomain.dns"

cronjob:
  schedule: "*/5 * * * *"
  annotations: {}
  failedJobsHistoryLimit: 5
  successfulJobsHistoryLimit: 2

postgresql:
  enabled: true
  existingSecret: "dbcreds"
  postgresqlUsername: nextcloud
  postgresqlDatabase: nextcloud

redis:
  enabled: true
  existingSecret: "rediscreds"
